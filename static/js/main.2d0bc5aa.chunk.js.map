{"version":3,"sources":["components/AppWrapper/AppWrapper.module.scss","components/AppWrapper/Input/Input.module.css","App.module.scss","components/AppWrapper/UserNumbers/UserNumbers.module.scss","components/AppWrapper/Button/Button.module.scss","components/AppWrapper/Hint/Hint.module.scss","components/AppWrapper/Button/Button.js","components/AppWrapper/Hint/Hint.js","components/AppWrapper/Input/Input.js","components/AppWrapper/UserNumbers/UserNumbers.js","components/AppWrapper/AppWrapper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","buttonFn","type","children","className","styles","button","onClick","Hint","lang","hint","Input","number","wrapper","input","maxLength","name","pattern","label","htmlFor","formItemBar","UserNumbers","numbers","hits","toString","AppWrapper","state","fetchedData","props","data","Lotto","numerki","split","inputNumber","paragraphNumbers","paragraphs","statement","React","createRef","changeLanguage","e","preventDefault","setState","prevState","compare","a","i","length","includes","push","checkIfDuplicates","Set","size","showStatement","w","current","innerText","handleButton","target","value","array","addInput","removeInput","inputs","components","this","key","map","item","firstSection","src","alt","onSubmit","hintLabelWrapper","inputWrapper","btnWrapper","ref","Component","App","error","loading","fetch","then","res","ok","json","Promise","reject","catch","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d0bc5aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AppWrapper_wrapper__1nRj6\",\"firstSection\":\"AppWrapper_firstSection__1GkZv\",\"inputWrapper\":\"AppWrapper_inputWrapper__1zz4o\",\"btnWrapper\":\"AppWrapper_btnWrapper__24a8N\",\"hintLabelWrapper\":\"AppWrapper_hintLabelWrapper__3iK7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Input_wrapper__H6YPW\",\"formItemBar\":\"Input_formItemBar__238qJ\",\"label\":\"Input_label__2vobE\",\"input\":\"Input_input__I7spn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__RCHjb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hits\":\"UserNumbers_hits__27oiO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__10T0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hint\":\"Hint_hint__2qgao\"};","import React from 'react';\nimport styles from './Button.module.scss';\n\nconst Button = ({buttonFn, type, children}) => (\n    <button type={type} className={styles.button} onClick={buttonFn}>{children}</button>\n);\n\nexport default Button;","import React from 'react';\nimport styles from './Hint.module.scss';\n\n\nconst Hint = ({lang}) => (\n    <p className={styles.hint}>\n        <span>\n            {\n                lang === \"pl\"\n                    ?\n                    \"Liczby powinny byÄ‡ zapisane po przecinkach i bez spacji.\"\n                    :\n                    \"The numbers should be written after commas and without spaces.\"\n            }\n        </span>\n    </p>\n);\n\nexport default Hint;","import React from 'react';\nimport styles from './Input.module.css';\n\nconst Input = ({number, lang}) => (\n    <div className={styles.wrapper}>\n        <input\n            className={styles.input}\n            maxLength=\"17\"\n            name={\"Input\"+number}\n            pattern=\"?:(?:[1-9]|[1-4][0-9],){5}([1-9]|[1-4][0-9])\"\n        />\n        <label className={styles.label} htmlFor={\"Input\"+number}>\n            {lang === \"pl\" ? \"Zestaw \" : \"Set \"} {number+1} :\n        </label>\n        <div className={styles.formItemBar} />\n    </div>\n);\n\nexport default Input;\n","import React from 'react';\nimport styles from './UserNumbers.module.scss';\n\nconst UserNumbers = ({numbers, hits}) => (\n    <p>\n        <span className={styles.numbers}>{numbers.toString()}</span>\n        <span className={styles.hits}>{hits.toString()}</span>\n    </p>\n\n);\n\nexport default UserNumbers;","import React from 'react';\nimport styles from './AppWrapper.module.scss';\nimport Button from './Button/Button';\nimport Hint from \"./Hint/Hint\";\nimport Input from \"./Input/Input\";\nimport UserNumbers from \"./UserNumbers/UserNumbers\";\n\n\nclass AppWrapper extends React.Component {\n    state = {\n        fetchedData: this.props.data.Lotto.numerki.split(\",\"),\n        inputNumber: 1,\n        paragraphNumbers: 1,\n        lang: \"pl\",\n        paragraphs: []\n    };\n    statement = React.createRef();\n\n    changeLanguage = e => {\n        e.preventDefault();\n        this.setState((prevState) => ({\n            lang: prevState.lang === \"pl\" ? \"en\" : \"pl\"\n        }))\n    };\n\n    compare = a => {\n        let hits = [];\n        for (let i = 0; i < a.length; i++) {\n            if (this.state.fetchedData.includes(a[i])) {\n                hits.push(a[i]);\n            }\n        }\n        if (hits.length === 0) {\n            hits.push(\"X\");\n        }\n        return hits;\n    };\n\n    checkIfDuplicates = a => {\n        return new Set(a).size === a.length;\n    };\n\n    showStatement = w => {\n       this.statement.current.innerText = w;\n    };\n\n    handleButton = e => {\n        e.preventDefault();\n        for (let i = 0; i < this.state.inputNumber; i++) {\n            if (!this.checkIfDuplicates(e.target[i].value)) {\n                let array = e.target[i].value.split(\",\");\n                this.state.paragraphs.push(\n                    {\n                        numbers: array,\n                        hits: this.compare(array)\n                    }\n                );\n                this.setState((prevState) => ({\n                    paragraphNumbers: prevState.paragraphNumbers + 1\n                }));\n            } else {\n                if (this.state.lang === \"pl\") {\n                    this.showStatement(\"Liczby powinny byÄ‡ rÃ³Å¼ne\");\n                } else {\n                    this.showStatement(\"Numbers should be unique\")\n                }\n            }\n        }\n    };\n\n    addInput = e => {\n        e.preventDefault();\n        this.setState((prevState) => ({\n            inputNumber: prevState.inputNumber + 1\n        }))\n    };\n\n    removeInput = e => {\n        e.preventDefault();\n        if (this.state.inputNumber > 1) {\n            this.setState((prevState) => ({\n                inputNumber: prevState.inputNumber - 1\n            }))\n        }\n    };\n\n    render() {\n        let inputs = [];\n        let components = [];\n        for (let i = 0; i < this.state.inputNumber; i++) {\n            inputs.push(\n                <Input number={i} fetchedData={this.state.fetchedData} key={i} lang={this.state.lang}/>\n            )\n        }\n        this.state.paragraphs.map(item => (\n            components.push(\n                <UserNumbers key={item} numbers={item.numbers} hits={item.hits}/>\n            )\n        ));\n\n        return (\n            <>\n                <div className={styles.firstSection}>\n                    <p>{this.state.lang === \"pl\" ? \"SprawdÅº swÃ³j kupon Lotto!\" : \"Check your Lotto coupon!\"}</p>\n                    {this.state.lang === \"pl\"\n                        ?\n                        <img src=\"https://image.flaticon.com/icons/svg/299/299425.svg\" alt=\"\" onClick={this.changeLanguage}/>\n                        :\n                        <img src=\"https://image.flaticon.com/icons/svg/299/299474.svg\" alt=\"\" onClick={this.changeLanguage}/>\n                    }\n                </div>\n                <form onSubmit={this.handleButton} className={styles.wrapper}>\n                    <div className={styles.hintLabelWrapper}>\n                        <label htmlFor=\"liczby\">\n                            {this.state.lang === \"pl\" ? \"Wpisz tutaj swoje liczby: \" : \"Enter your numbers here: \"}\n                        </label>\n                        <Hint lang={this.state.lang}/>\n                    </div>\n                    <div className={styles.inputWrapper}>\n                        {inputs}\n                    </div>\n\n                    <div className={styles.btnWrapper}>\n                        <Button buttonFn={this.addInput}>+</Button>\n                        <Button buttonFn={this.removeInput}>-</Button>\n                        <Button type=\"submit\">{this.state.lang === \"pl\" ? \"SprawdÅº!\" : \"Check!\"}</Button>\n                    </div>\n                    <div>\n                        {!components.length\n                            ?\n                            <UserNumbers key=\"UserNumbersTitle\" numbers=\"\" hits=\"\"/>\n                            :\n                            <UserNumbers\n                                key=\"UserNumbersTitle\"\n                                numbers={\n                                    this.state.lang === \"pl\"\n                                    ? (components.length>1?\"Twoje zestawy liczb:\":\"TwÃ³j zestaw liczb:\")\n                                    : (components.length>1?\"Your number sets:\": \"Your number set:\")\n                                }\n                                hits={this.state.lang === \"pl\" ? \"Trafienia:\" : \"Hits:\"}\n                            />\n                        }\n                        {components}\n                    </div>\n                </form>\n                <div>\n                    <p ref={this.statement}>{this.state.lang === \"pl\" ? \"Powodzenia !!!\" : \"Good Luck!!!\"}</p>\n                </div>\n            </>\n        );\n    }\n}\n\n\nexport default AppWrapper;","import React from 'react';\nimport styles from './App.module.scss';\nimport AppWrapper from \"./components/AppWrapper/AppWrapper\";\n\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        error: null,\n        loading: false,\n        inputs: 3\n    };\n\n   componentDidMount() {\n        fetch(`https://jsonp.afeld.me/?callback=&url=http%3A%2F%2Fserwis.mobilotto.pl%2Fmapi_v6%2Findex.php%3Fjson%3DgetGames%26fbclid%3DIwAR2nAx0aMaXt5sNPEUa2xV9pKcWG6X_f4beUEMG6CPRdYoBBmnlxL8K11mQ`)\n           .then(res => {\n               if (res.ok) {\n                   return res.json()\n               } else {\n                   return Promise.reject(res)\n               }\n           })\n           .then(res => this.setState({\n               data: res,\n               loading: true\n           }))\n           .catch(() => this.setState({ error: true }));\n    };\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <div className={styles.wrapper}>\n                    <AppWrapper data={this.state.data}/>\n                </div>\n            );\n        } else {\n            return (\n                <div className={styles.wrapper}>\n                    Pobieranie aktualnych wynikÃ³w Lotto.\n                </div>\n            );\n        }\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}